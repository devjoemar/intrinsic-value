package com.devjoemar.intrinsicvalue.service;

import com.devjoemar.intrinsicvalue.api.IntrinsicValueCalculationDto;
import com.devjoemar.intrinsicvalue.api.IntrinsicValueResponse;
import org.springframework.stereotype.Service;

import java.math.BigDecimal;
import java.math.RoundingMode;

/**
 * Service class for calculating the intrinsic value of a stock.
 * <p>
 * Intrinsic value calculation is a fundamental analysis method that estimates the
 * inherent worth of a stock based on its expected future cash flows. This method
 * helps investors determine whether a stock is overvalued or undervalued based on
 * its current market price.
 * </p>
 * <p>
 * The following parameters are used in the intrinsic value calculation:
 * </p>
 * <ul>
 *   <li><b>fcfLastYear</b> (Free Cash Flow for the last year):
 *       Represents the cash generated by the company that is available for distribution
 *       to its securities holders. It is a key indicator of a company's financial health.</li>
 *   <li><b>growthRate</b> (Expected growth rate for the next 10 years):
 *       Used to project future free cash flows. A higher growth rate indicates expectations
 *       of higher future cash flows.</li>
 *   <li><b>discountRate</b> (Discount rate):
 *       Used to discount future cash flows to their present value. It reflects the time value
 *       of money and the risk associated with the investment. A higher discount rate indicates
 *       higher perceived risk.</li>
 *   <li><b>terminalGrowthRate</b> (Terminal growth rate):
 *       Used to estimate the value of the company's cash flows beyond the forecast period.
 *       It reflects long-term growth expectations.</li>
 *   <li><b>sharesOutstanding</b> (Total number of outstanding shares):
 *       Total number of shares issued by the company that are held by investors, including
 *       restricted shares owned by the company's officers and insiders.</li>
 *   <li><b>netDebt</b> (Net debt):
 *       Company's total debt minus its cash and cash equivalents. It is used to adjust
 *       the enterprise value to account for the company's financial obligations.</li>
 *   <li><b>currentMarketPrice</b> (Current market price of the stock):
 *       Price at which the stock is currently trading in the market. It is used to compare
 *       against the intrinsic value to determine if the stock is undervalued or overvalued.</li>
 * </ul>
 * <p>
 * <b>Why Perform Intrinsic Value Calculation?</b>
 * <br>
 * Intrinsic value calculation is performed to estimate the inherent worth of a stock based on
 * its expected future cash flows. This method helps investors determine whether a stock is
 * overvalued or undervalued based on its current market price. By understanding the intrinsic
 * value, investors can make informed decisions about buying or selling a stock, aiming to achieve
 * better returns on their investments.
 * </p>
 * <p>
 * <b>Formulas and Reasoning:</b>
 * <ul>
 *   <li><b>Future Cash Flows:</b> Projected by growing the last year's free cash flow
 *       (fcfLastYear) by the growth rate (growthRate) each year for the next 10 years.</li>
 *   <li><b>Terminal Value:</b> Estimated using the terminal growth rate (terminalGrowthRate)
 *       and discount rate (discountRate). If the discount rate is zero, the terminal value is
 *       calculated differently to avoid division by zero.</li>
 *   <li><b>Present Value:</b> Future cash flows and terminal value are discounted back to
 *       their present value using the discount rate (discountRate).</li>
 *   <li><b>Total Enterprise Value:</b> Sum of the present values of all future cash flows
 *       and the terminal value.</li>
 *   <li><b>Adjusted Enterprise Value:</b> Total enterprise value adjusted for net debt (netDebt)
 *       to account for the company's financial obligations.</li>
 *   <li><b>Intrinsic Value per Share:</b> Adjusted enterprise value divided by the number of
 *       outstanding shares (sharesOutstanding) to get the value per share.</li>
 *   <li><b>Undervalued or Overvalued:</b> Compared the intrinsic value per share with the current
 *       market price (currentMarketPrice) to determine if the stock is undervalued or overvalued.</li>
 * </ul>
 * </p>
 */
@Service
public class IntrinsicValueService {

    /**
     * Calculates the intrinsic value of a stock based on the given inputs.
     *
     * @param dto the intrinsic value calculation DTO containing the parameters described above
     * @return the intrinsic value per share and a remark indicating if the stock is undervalued or overvalued
     */
    public IntrinsicValueResponse calculateIntrinsicValue(IntrinsicValueCalculationDto dto) {
        final int forecastPeriodYears = 10;

        // Calculate yearly Free Cash Flows (FCFs) for the next 10 years
        BigDecimal[] forecastedFcfs = new BigDecimal[forecastPeriodYears];
        forecastedFcfs[0] = dto.getFcfLastYear().multiply(BigDecimal.ONE.add(dto.getGrowthRate()));
        for (int year = 1; year < forecastPeriodYears; year++) {
            forecastedFcfs[year] = forecastedFcfs[year - 1].multiply(BigDecimal.ONE.add(dto.getGrowthRate()));
        }

        // Calculate the terminal value
        BigDecimal terminalValue;
        if (dto.getDiscountRate().compareTo(BigDecimal.ZERO) > 0) {
            terminalValue = forecastedFcfs[forecastPeriodYears - 1]
                    .multiply(BigDecimal.ONE.add(dto.getTerminalGrowthRate()))
                    .divide(dto.getDiscountRate().subtract(dto.getTerminalGrowthRate()), RoundingMode.HALF_UP);
        } else {
            terminalValue = forecastedFcfs[forecastPeriodYears - 1]
                    .multiply(BigDecimal.ONE.add(dto.getTerminalGrowthRate()));
        }

        // Calculate the present value of FCFs and the terminal value
        BigDecimal totalPresentValueOfFcfs = BigDecimal.ZERO;
        for (int year = 0; year < forecastPeriodYears; year++) {
            totalPresentValueOfFcfs = totalPresentValueOfFcfs.add(
                    forecastedFcfs[year].divide(BigDecimal.ONE.add(dto.getDiscountRate()).pow(year + 1), RoundingMode.HALF_UP)
            );
        }
        BigDecimal presentValueOfTerminalValue = terminalValue.divide(
                BigDecimal.ONE.add(dto.getDiscountRate()).pow(forecastPeriodYears), RoundingMode.HALF_UP
        );

        // Calculate the total enterprise value
        BigDecimal totalEnterpriseValue = totalPresentValueOfFcfs.add(presentValueOfTerminalValue);

        // Adjust for net debt
        BigDecimal adjustedTotalEnterpriseValue = totalEnterpriseValue.subtract(dto.getNetDebt());

        // Calculate the intrinsic value per share
        BigDecimal intrinsicValuePerShare = adjustedTotalEnterpriseValue.multiply(new BigDecimal(1000))
                .divide(dto.getSharesOutstanding(), RoundingMode.HALF_UP);

        // Determine if the stock is undervalued or overvalued based on the current market price
        String remark = intrinsicValuePerShare.compareTo(dto.getCurrentMarketPrice()) > 0 ? "Undervalued" : "Overvalued";

        // Return the result
        return new IntrinsicValueResponse(intrinsicValuePerShare.setScale(2, RoundingMode.HALF_UP), "USD", remark);
    }
}
